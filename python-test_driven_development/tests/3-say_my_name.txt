The ``3-say_my_name`` Module
============================================
How to use 3-say_my_name.py
============================================

This library has one function called ``say_my_name()``.

``say_my_name()`` prints a person's first name and last name.

## Importing the Function say_my_name
>>> say_my_name = __import__('3-say_my_name').say_my_name

## Correct Usage

### Passing First Name and Last Name Correctly
>>> say_my_name("John", "Doe")
My name is John Doe

>>> say_my_name("Jane")
My name is Jane

### Passing Last Name as None
>>> say_my_name("John", None)
Traceback (most recent call last):
    ...
TypeError: last_name must be a string

### Passing Both First Name and Last Name as None
>>> say_my_name(None, None)
Traceback (most recent call last):
    ...
TypeError: first_name must be a string

### Passing First Name as None
>>> say_my_name(None, "Doe")
Traceback (most recent call last):
    ...
TypeError: first_name must be a string

### Passing Incorrect Types for First Name and Last Name
>>> say_my_name(1, "Doe")
Traceback (most recent call last):
    ...
TypeError: first_name must be a string

>>> say_my_name("John", [4])
Traceback (most recent call last):
    ...
TypeError: last_name must be a string

### Passing More Than Two Arguments to say_my_name()
>>> say_my_name("John", "Doe", "Smith") # doctest: +ELLIPSIS
Traceback (most recent call last):
    ...
TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
